name: Build SQLite3 WASM

on:
  push:
    branches: ["**"]
  pull_request:
    branches: [main]

jobs:
  compile_sqlite3_wasm:
    strategy:
      matrix:
        os: [macos-latest]

    name: Compile sqlite3 wasm for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Setup macOS
        if: runner.os == 'macOS'
        run: |
          brew install cmake
          brew install llvm
          brew install binaryen
          curl -sL https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-22/libclang_rt.builtins-wasm32-wasi-22.0.tar.gz | \
          tar x -zf - -C /opt/homebrew/opt/llvm/lib/clang/18*
          curl -sS -L https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-22/wasi-sysroot-22.0.tar.gz | \
          sudo tar x -zf - -C /opt
      - name: Install Rust Nightly
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly-2024-05-18
          components: rust-src
      - name: Set environment variable
        run: |
          echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH
      - name: Compile sqlite3.wasm on macOS
        if: runner.os == 'macOS'
        working-directory: sqlite3
        run: |
          cmake -Dwasi_sysroot=/opt/wasi-sysroot -Dclang=/opt/homebrew/opt/llvm/bin/clang -S assets/wasm -B .dart_tool/sqlite3_build --toolchain toolchain.cmake
          cmake --build .dart_tool/sqlite3_build/ -t output -j
      - name: Upload binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          overwrite: true
          file: sqlite3/.dart_tool/sqlite3_build/sqlite3.wasm
          asset_name: sqlite3.wasm
